1. Introduction to Angular
Installation requeries
nodes.js

2. Customizing components and directives
- Build out the structure for the Housing components
- Make the Housing component customizable
- Dynamically display the housing location
- Add CSS styling to the application

*** @input properties ***
Passing data in components with @input (is a decorator used to pass data from a parent component to a child component) properties

[] : 
{{}} : interpolation
Here we transfering informations app to the housingComponent
In this part, we will create a new type using typeScript:
The type that we create here is an interface.

Directives:
*ngFor

3. Rooter
- Navigated in our application using the Angulat router and th routerlink directives
- Passed information to a route using the parameter routes
- Retrieved information from a route in a component using the ActivatedRoute feature

A route is a mapping between a URL path and a specific component so that 
when use navigate to /about (for example), the AboutComponent is display

In this project, we will create a details component so that the user can navigate inside.
To do that, we apply some configuration.
In src/main.ts, import the provideRouter and then add this 
{
  providers: [
    provideRouter([])
  ]

} in the bootstrapApplication as a second parameter.


When I click on the housing's Learn more, how do we which information to display ?
To solve this problem, we can pass some id in the url and retreave some where.


inject ???
ActivatedRoute : is a reference to the created route

4. Services it works with @injectable()
- How to create a service
- How to use dependency injection in components
- Completed details page

A service is a class that contains reusable logic, functionality, or data that can be shared
across multiple components, directives, or other parts of the application.
It helpp us to avoid duplicate code and share data effeciently.

Instead of each component will have the data inside, here, we will use
service to retreave the data from the data source (API, database...) and share the 
data across the application.


5. Forms in Angular
- About angular forms, formGroup, and FormControl
- Bind a formGroup to an HTML form in a template
- Use event binding in angular (ngForm)
In angular, we can manage forms easily and smouthfly.
We can also manage input validation as well.
We have to import these : FormControl, FormGroup, ReactiveFormsModule

6. HTTP
- Fetch to make HTTP request to a live endpoint using-server
- Refactored the housing sevice to use promises and async code
- Added filtering capabilities to our app with template variables and typeScript
In this part, we will learn how to create a retreave data from
by using HTTP request.

I will create a sandalone server on our local machine with this command:
npm install -g json-server
json-server --watch db.json

In this part, we getting the data from a server (API) instead of getting from an 
array.


async ??, Promise<> ??

When we get a response from an API, we always convert y using then
this.housingService.getHousingLocationById(housingLocationId).then((housingLocation: HousingLocation | undefined) => {
this.housingLocation = housingLocation;
});


// Template variable : #filter

Use make get value in  input